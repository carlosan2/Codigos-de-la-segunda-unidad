/* 
	Fundación Kinal
    Centro educativo Técncico Laboral Kinal
    Quinto Perito
    Quinto Electrónica 
    Codigo Técnico: EB5AM
    Curso: Taller de Electrónica Digital y reparación de computadoras
    Proyecto: PRACTICA 1 PARTE I
    NOMBRE: Carlos Mayorga 2020404
    Fecha: 12 de julio del 2024
    */

#include <Adafruit_NeoPixel.h>


#define TRIG_PIN 9
#define ECHO_PIN 10
#define NEOPIXEL_PIN A4
#define NUMPIXELS 3

Adafruit_NeoPixel pixels(NUMPIXELS, NEOPIXEL_PIN, NEO_GRB + NEO_KHZ800);

int count = 0;
int maxPeople = 9;

const int segmentPins[] = {2, 3, 4, 5, 6, 7, 8};

const int digits[10][7] = {
  {1, 1, 1, 1, 1, 1, 0}, // 0
  {0, 1, 1, 0, 0, 0, 0}, // 1
  {1, 1, 0, 1, 1, 0, 1}, // 2
  {1, 1, 1, 1, 0, 0, 1}, // 3
  {0, 1, 1, 0, 0, 1, 1}, // 4
  {1, 0, 1, 1, 0, 1, 1}, // 5
  {1, 0, 1, 1, 1, 1, 1}, // 6
  {1, 1, 1, 0, 0, 0, 0}, // 7
  {1, 1, 1, 1, 1, 1, 1}, // 8
  {1, 1, 1, 0, 0, 1, 1}  // 9
};

void setup() {
  Serial.begin(9600);

  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);

  for (int i = 0; i < 7; i++) {
    pinMode(segmentPins[i], OUTPUT);
  }

  pixels.begin();
  pixels.show(); 

  displayDigit(count);
}

void loop() {
  float distance = measureDistance();

  if (distance >= 23.0 && distance <= 43.0) {
    if (count < maxPeople) {
      count++;
      displayDigit(count); 
      pixels.setPixelColor(0, pixels.Color(0, 255, 0)); 
    } else {
      displayFull(); 
      pixels.setPixelColor(0, pixels.Color(255, 0, 0)); 
    }
    pixels.show(); 
    delay(1000); 
  }

  delay(100); 
}

float measureDistance() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  long duration = pulseIn(ECHO_PIN, HIGH);

  float distance = (duration * 0.134) / 2;

  return distance; 
}

void displayDigit(int digit) {
  for (int i = 0; i < 7; i++) {
    digitalWrite(segmentPins[i], digits[digit][i]);
  }
}

void displayFull() {
  for (int i = 0; i < 7; i++) {
    if (i == 6) { 
      digitalWrite(segmentPins[i], HIGH);
    } else {
      digitalWrite(segmentPins[i], LOW);
    }
  }
}
